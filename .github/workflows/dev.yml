# This is a basic workflow to help you get started with Actions

name: Autodeploy to DEV
env: 
  EB_PACKAGE_S3_BUCKET_NAME : "investme-deploy"
  EB_APPLICATION_NAME       : "investme"
  EB_ENVIRONMENT_NAME       : "Investme-env"
  DEPLOY_PACKAGE_NAME       : "investme-webapp-dev-deploy-package-${{  github.sha  }}.zip"
  AWS_REGION_NAME           : "eu-west-2"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  CI-part:
    runs-on: ubuntu-latest
    environment: dev
    concurrency: dev
    steps:
    - name: Git clone our repo
      uses: actions/checkout@v2
      with: 
        submodules: 'recursive'
        token: ${{ secrets.REPO_SCOPED_TOKEN }}

      
    - name: Create ZIP deployment package
      run : zip -r ${{  env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Configure AWS credintials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MY_AWS_ACCES_KEY }}
        aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}
        
    - name: Copy deployment package to S3Bucket
      run: aws s3 cp ${{  env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      
    - name: Succed CI part
      run: echo "Succesfuly finished CI part"
  
  
  CD-part: 
    runs-on: ubuntu-latest
    needs: [CI-part]
    environment: dev
    concurrency: dev
    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    :  ${{ secrets.MY_AWS_ACCES_KEY }}
        aws-secret-access-key:  ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region           :  ${{ env.AWS_REGION_NAME }}
    
    - name: Create new ElasticBeanstalk Application Version
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
       
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"

    - name: Wait for Environment to become Ready
      run : aws elasticbeanstalk wait environment-updated --version-label "Ver-${{ github.sha }}"

    - name: Succed CD part
      run: echo "Succesfuly finished CD part"
